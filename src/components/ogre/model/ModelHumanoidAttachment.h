/*
 Copyright (C) 2014 Céline NOËL <celine.noel.7294@gmail.com>

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef MODELHUMANOIDATTACHMENT_H
#define MODELHUMANOIDATTACHMENT_H

#include "components/ogre/model/ModelAttachment.h"
#include <OgreVector3.h>
#include <OgreQuaternion.h>


namespace Ember
{

namespace OgreView
{

namespace Model
{
/**
 * @brief Attachment for a ModelRepresentationHumanoid instance.
 *
 * Use this attachment when you have a ModelHumanoidRepresentation you need to attach to an entity.
 * This class derives from ModelAttachment. It overrides setPosition(): when an model is moved through SmartBody, the movement has to
 * be smoothed in order to seem natural. Consequently, the position retrieved from the server must be adjusted every frame to fit the 
 * animation. To do this, we query how much the model has moved in SmartBody since the last frame, and we use this value and the current
 * position of the scene node to calculate the new one. 
 *
 * @author Céline NOËL <celine.noel.7294@gmail.com>
 */
class ModelHumanoidAttachment: public ModelAttachment
{
public:

	/**
	 * @brief Ctor.
	 */
	ModelHumanoidAttachment(EmberEntity& parentEntity, ModelRepresentation& modelRepresentation, INodeProvider* nodeProvider, const std::string& pose = "");
	
	/**
	 * @brief Dtor.
	 */
	virtual ~ModelHumanoidAttachment();

	/**
	 * @brief Sets the position and the orientation of the node.
	 * When using SmartBody, this method retrieves the coordinates of the base joint in the character's skeleton to know where the node 
	 * should actually be. Thus, the acceleration and deceleration effects generated by SmartBody should be rendered.
	 * Overrides ModelAttachment:setPosition().
	 */
	virtual void setPosition(const WFMath::Point<3>& position, const WFMath::Quaternion& orientation, const WFMath::Vector<3>& velocity);

	/**
	 * @brief Inherited from NodeAttachment : returns true is the representation of the entity is moving (this way, if the character stops,
	 * the walking animation does not interrupt abruptly).
	 */
	bool isEntityMoving() const;
};

}
}
}

#endif